name: CI

on:
  - pull_request
  - push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install LLVM repositories Ubuntu
        if: runner.os == 'Linux'
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo add-apt-repository -y 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'

      - name: Install required Ubuntu packages
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -yq build-essential pkg-config zlib1g-dev libssl-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libjsoncpp-dev libsecp256k1-dev clang-12

      #Begin Caching Individual Brew Dependencies for MacOS
      - name: Configure cache dependency boost [MacOS]
        id: cache-brew-boost
        if: runner.os == 'macOS'
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/Homebrew/boost--*
            ~/Library/Caches/Homebrew/downloads/*--boost-*
          key: brew-${{ hashFiles('.github/brew-formulae') }}

      - name: Install Boost
        if: runner.os == 'macOS'
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install boost

      # - name:  Brew Install Boost if Not Found [MacOS]
      #   if: runner.os == 'macOS' && steps.cache-brew-boost.outputs.cache-hit != 'true'
      #   run: brew install boost

      - name: Configure cache dependency jsoncpp [MacOS]
        id: cache-brew-jsoncpp
        if: runner.os == 'macOS'
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/Homebrew/jsoncpp--*
            ~/Library/Caches/Homebrew/downloads/*--jsoncpp-*
          key: brew-${{ hashFiles('.github/brew-formulae') }}

      - name: Install jsoncpp
        if: runner.os == 'macOS'
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install jsoncpp
      #End Caching Individual Brew Dependencies

      - name: Install the rest of MacOS packages
        if: runner.os == 'macOS'
        run: brew update && brew install llvm@12 cmake openssl pkg-config autoconf automake libtool domt4/crypto/secp256k1

      - name: ScillaRTL Testsuite Release Build [Ubuntu]
        if: runner.os == 'Linux'
        run: scripts/build_ci.sh

      - name: ScillaRTL Testsuite Release Build [MacOS]
        if: runner.os == 'macOS'
        run: scripts/build_ci_macos.sh
        env: 
          OPENSSL_ROOT_DIR: '/usr/local/opt/openssl'

      - name: ScillaRTL Testsuite Debug Build [Ubuntu]
        if: runner.os == 'Linux'
        run: scripts/dbuild_ci.sh

      - name: ScillaRTL Testsuite Debug Build [MacOS]
        if: runner.os == 'macOS'
        run: scripts/dbuild_ci_macos.sh
